name: Brainfuck interpreter by GitHub Actions

on:
  push:
    branches:
      - dummy-main

jobs:
  entrypoint:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - name: Restore context
        uses: actions/cache/restore@v4
        with:
          path: |
            preprocessing-state
            program-state
            character-to-number
            number-to-character
          key: ${{ runner.os }}-${{ github.run_id }}-${{ github.run_attempt }}
          restore-keys: |
            ${{ runner.os }}-
      - name: Exit if `program-state` does not exist
        id: check-program-state-existance
        working-directory: program-state
        run: cat <<<MESSAGE=\'$( cat program-state 2>&1 )\'
      - run: exit 1
        if: "${{ steps.check-program-state-existance.outputs.MESSAGE == 'cat: program-state: No such file or directory' }}"

      #==============================================================================
      # Main
      - name: Evaluates values to be used later
        id: values
        working-directory: program-state
        run: |
          cat <<< "CURRENT_PROGRAM_POSITION=$(cat current-program-position)" >> $GITHUB_ENV
          cat <<< "PROGRAM_LENGTH='$(cat program | wc -c)'" >> $GITHUB_ENV
          PROGRAM="$(cat program)"
          cat <<< "CURRENT_CHARACTER=${PROGRAM:$(cat current-program-position):1}" >> $GITHUB_ENV

      - name: ">"
        uses: ./.github/actions/brainfuck-main/>/
        if: ${{ fromJson(steps.values.outputs.CURRENT_PROGRAM_POSITION) < fromJson(steps.values.outputs.PROGRAM_LENGTH) && steps.values.outputs.CURRENT_CHARACTER == '>' }}

      - name: "<"
        uses: ./.github/actions/brainfuck-main/</
        if: ${{ fromJson(steps.values.outputs.CURRENT_PROGRAM_POSITION) < fromJson(steps.values.outputs.PROGRAM_LENGTH) && steps.values.outputs.CURRENT_CHARACTER == '<' }}

      - name: "+"
        uses: ./.github/actions/brainfuck-main/+/
        if: ${{ fromJson(steps.values.outputs.CURRENT_PROGRAM_POSITION) < fromJson(steps.values.outputs.PROGRAM_LENGTH) && steps.values.outputs.CURRENT_CHARACTER == '+' }}

      - name: "-"
        uses: ./.github/actions/brainfuck-main/-/
        if: ${{ fromJson(steps.values.outputs.CURRENT_PROGRAM_POSITION) < fromJson(steps.values.outputs.PROGRAM_LENGTH) && steps.values.outputs.CURRENT_CHARACTER == '-' }}

      - name: "."
        uses: ./.github/actions/brainfuck-main/_./
        if: ${{ fromJson(steps.values.outputs.CURRENT_PROGRAM_POSITION) < fromJson(steps.values.outputs.PROGRAM_LENGTH) && steps.values.outputs.CURRENT_CHARACTER == '.' }}

      - name: ","
        uses: ./.github/actions/brainfuck-main/,/
        if: ${{ fromJson(steps.values.outputs.CURRENT_PROGRAM_POSITION) < fromJson(steps.values.outputs.PROGRAM_LENGTH) && steps.values.outputs.CURRENT_CHARACTER == ',' }}

      - name: "["
        uses: ./.github/actions/brainfuck-main/[/
        if: ${{ fromJson(steps.values.outputs.CURRENT_PROGRAM_POSITION) < fromJson(steps.values.outputs.PROGRAM_LENGTH) && steps.values.outputs.CURRENT_CHARACTER == '[' }}

      - name: "]"
        uses: ./.github/actions/brainfuck-main/]/
        if: ${{ fromJson(steps.values.outputs.CURRENT_PROGRAM_POSITION) < fromJson(steps.values.outputs.PROGRAM_LENGTH) && steps.values.outputs.CURRENT_CHARACTER == ']' }}

      - name: Otherwise
        uses: ./.github/actions/brainfuck-main/otherwise/
        if: ${{ fromJson(steps.values.outputs.CURRENT_PROGRAM_POSITION) < fromJson(steps.values.outputs.PROGRAM_LENGTH) && !contains('><+-.,[]', steps.values.outputs.CURRENT_CHARACTER) }}

      - name: Basis
        id: basis
        uses: ./.github/actions/brainfuck-main/basis/
        if: ${{ !(fromJson(steps.values.outputs.CURRENT_PROGRAM_POSITION) < fromJson(steps.values.outputs.PROGRAM_LENGTH)) }}

      #==============================================================================
      - uses: actions/cache/save@v4
        with:
          path: |
            preprocessing-state
            program-state
            character-to-number
            number-to-character
          key: ${{ runner.os }}-${{ github.run_id }}-${{ github.run_attempt }}

      - run: sleep 5
      - name: Fire this workfllow recursively if not finished
        uses: ./.github/actions/empty-commit-to-branch/
        with:
          personal-access-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          branch-name: dummy-main
        if: ${{ steps.basis.outputs.is-finished != 'true' }}
